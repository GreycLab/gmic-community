---
## Checkerboard Inversion
By David Tschumperlé.
~~~
2048,2048,1,1,"L = clog(20*([x,y]/w - 0.5)); P = cexp([log(40/exp(L[0])),L[1]]); 85*xor(P[0]%4,P[1]%4)" map 6 rs 50%
~~~
===
%% 2048,2048,1,1,"L = clog(20*([x,y]/w - 0.5)); P = cexp([log(40/exp(L[0])),L[1]]); 85*xor(P[0]%4,P[1]%4)" map 6 rs 50% %%
===

---
## XOR Animation
By SlavaCat118.
~~~
255,255,127,1,"xor(x,y)%(z+1)" s z n 0,255
~~~
===
%% x "mkdir -p img" 255,255,127,3,"xor(x,y)%(z+1)" s z n 0,255 o img/xor_animation.mp4 rm 0 %% ![xor_animation](img/xor_animation.mp4)
===

---
## Reptilian
By David Tschumperlé.
~~~
300,300x5 foreach { noise_poissondisk 40 +distance 1 label_fg.. 0 mul. -1 watershed.. . rm. g xy,1 a c } norm neq 0 distance 1 apply_gamma 1.5 n 0,255 morph 20,0.1 map copper +rv[^0]
~~~
===
%% x "mkdir -p img" 300,300x5 foreach { noise_poissondisk 40 +distance 1 label_fg.. 0 mul. -1 watershed.. . rm. g xy,1 a c } norm neq 0 distance 1 apply_gamma 1.5 n 0,255 morph 20,0.1 map copper +rv[^0] o img/reptilian.mp4 rm 0 %% ![reptilian](img/reptilian.mp4)
===

---
## 3D Torus
By David Tschumperlé.
~~~
torus3d 100,80,36,24 s3d f.. 1+int(y/3) a y repeat 20 800,800 +r3d[0] 0,0,1,$> pose3d. 0.88,-0.08,-0.46,0,0.36,0.75,0.56,0,0.3,-0.66,0.7,0 j3d.. .,50%,50%,-500,1,2 rm. f. "boundary=1;i==j(-1)&&i==j(0,-1)?0:255" +b. 6 equalize. 256 *. 1.7 max[-2,-1] done rm[0] r2dx 50% n 0,255
~~~
===
%% x "mkdir -p img" torus3d 100,80,36,24 s3d f.. 1+int(y/3) a y repeat 20 800,800 +r3d[0] 0,0,1,$> pose3d. 0.88,-0.08,-0.46,0,0.36,0.75,0.56,0,0.3,-0.66,0.7,0 j3d.. .,50%,50%,-500,1,2 rm. f. "boundary=1;i==j(-1)&&i==j(0,-1)?0:255" +b. 6 equalize. 256 *. 1.7 max[-2,-1] done rm[0] r2dx 50% n 0,255 o img/torus3d.mp4 rm 0 %% ![torus3d](img/torus3d.mp4)
===

---
## Cauldron
By Garry Osgood.
~~~
srand 100 360,240,50,3 noise 0.2,2 bandpass 2%,3% n 0,255 s z animate 20
~~~
===
%% srand 100 360,240,50,3 noise. 0.2,2 bandpass 2%,3% n 0,255 s z o img/cauldron.mp4,20 rm 0 %%![cauldron](img/cauldron.mp4)
===

---
## Recursive Macro
By James Prichard.
~~~
1000,1000,1,1,f(x,y,l)=l?f(max(x,y)%3,abs(min(x,y))*3,l-1):x;f(x/w-.7,y/w,6)
~~~
===
%% 1000,1000,1,1,f(x,y,l)=l?f(max(x,y)%3,abs(min(x,y))*3,l-1):x;f(x/w-.7,y/w,6) n 0,255 r2dx 640 frame 1,1,0 %%
===

---
## Fibonacci Word
By James Prichard.
~~~
100000,1,1,1,0.6180339887498948482*x round f i-j[-1] (1,-1) * cumulate mod 4 + 1 +f arg(i,1,1,-1,-1) f.. arg(i,-1,1,1,-1) cumulate -[0] {0,im} -[1] {1,im} a y pointcloud 0 b 1
~~~
===
%% 100000,1,1,1,0.6180339887498948482*x round f i-j[-1] (1,-1) * cumulate mod 4 + 1 +f arg(i,1,1,-1,-1) f.. arg(i,-1,1,1,-1) cumulate -[0] {0,im} -[1] {1,im} a y pointcloud 0 b 1 n 0,255 r2dx 640 frame 1,1,0 %%
===

---
## Light Speed
By David Tschumperlé.
~~~
500,500 repeat 10 +noise_poissondisk[0] {3+$>} done rm[0] a z f "!z?(R=cut(norm(x-w/2,y-h/2)/20,0,d-1);i(x,y,R)):0" slices 0 to_rgb f "max(I)?u([255,255,255]):I" blur_radial 0.6% equalize n 0,255
~~~
===
%% 500,500 repeat 10 +noise_poissondisk[0] {3+$>} done rm[0] a z f "!z?(R=cut(norm(x-w/2,y-h/2)/20,0,d-1);i(x,y,R)):0" slices 0 to_rgb f "max(I)?u([255,255,255]):I" blur_radial 0.6% equalize n 0,255 frame 1,1,0 %%
===

---
## Sierpinksi Carpet
By David Tschumperlé.
~~~
729,729,1,3,"c(x,y,l) = (S = round(w/3^l); (int(x/S)%3)*(int(y/S)%3)==1?255:l<6?c(x,y,l + 1):0); c(x,y,1)"
~~~
===
%% 729,729,1,3,"c(x,y,l) = (S = round(w/3^l); (int(x/S)%3)*(int(y/S)%3)==1?255:l<6?c(x,y,l + 1):0); c(x,y,1)" r2dx 50% frame 1,1,0 %%
===

---
## Sierpinski Triangle
By David Tschumperlé.
~~~
1024,1024,1,1,">x>y?0:y<2?1:xor(j(0,-1),j(-1,-1))" f. "255*j(-w/2+y/2,0)"
~~~
===
%% 1024,1024,1,1,">x>y?0:y<2?1:xor(j(0,-1),j(-1,-1))" f. "255*j(-w/2+y/2,0)" r2dx 33% frame 1,1,0 %%
===
---
